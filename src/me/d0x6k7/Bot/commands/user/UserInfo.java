package me.d0x6k7.Bot.commands.user;

import me.d0x6k7.Bot.utils.FindUtils;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.events.message.guild.GuildMessageReceivedEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;

import java.awt.*;
import java.time.format.DateTimeFormatter;

/**
 * Created by 0x6k7 on 10/23/2021.
 */
public class UserInfo extends ListenerAdapter {
    public String bot_prefix = "/";

    @Override
    public void onGuildMessageReceived (GuildMessageReceivedEvent e) {
        String[] args = e.getMessage().getContentRaw().split(" ");

        if(args[0].equalsIgnoreCase(bot_prefix + "userinfo")) {
            if(args.length < 2) {
                EmbedBuilder usage = new EmbedBuilder();
                usage.setColor(Color.BLACK);
                usage.setTitle("Command usage: ");
                usage.setDescription("Usage: " + bot_prefix + "userinfo [username]");
                e.getChannel().sendMessage(usage.build()).queue();
                System.out.println("User " + e.getAuthor().getName() + ": " + e.getMessage().getContentRaw());
            }

            else {
                try {
                    Member member = e.getMessage().getMentionedMembers().get(0);

                    String getHypeSquad = String.valueOf(member.getUser().getFlags());
                    String hypesquad = "";
                    String nitro = "";

                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM/dd/yyyy HH:mm:ss");
                    if(getHypeSquad.equals("[]"))
                        hypesquad += "None";
                    else
                        hypesquad += getHypeSquad;

                    try {
                        if(member.getUser().getAvatarUrl().endsWith(".gif"))
                            nitro += "Yes";
                        else
                            nitro += "No";
                    } catch (NullPointerException n) {
                        nitro += "Undefined";
                    }

                    EmbedBuilder userinfo = new EmbedBuilder();
                    userinfo.setColor(Color.CYAN);
                    userinfo.setThumbnail(member.getUser().getAvatarUrl());
                    userinfo.setTitle(member.getUser().getName() + "'s info: ");
                    userinfo.addField("Name/Nickname: ", String.valueOf(member.getNickname()), false);
                    userinfo.addField("User: ", member.getUser().getName() + "#" + member.getUser().getDiscriminator(), false);
                    userinfo.addField("Status: ", String.valueOf(member.getOnlineStatus()), false);
                    userinfo.addField("Hypesquad: ", hypesquad, false);
                    userinfo.addField("ID: ", member.getUser().getId(), false);
                    userinfo.addField("Discord Joined: ", dtf.format(member.getTimeCreated()), false);
                    userinfo.addField("Guild Joined: ", dtf.format(member.getTimeJoined()), false);
                    userinfo.addField("Nitro: ", nitro, false);
                    userinfo.addField("Roles: ", FindUtils.userGetRoles(member.getRoles()), false);
                    userinfo.setFooter("Generated by " + e.getAuthor().getName(), e.getAuthor().getAvatarUrl());
                    e.getChannel().sendMessage(userinfo.build()).queue();
                    System.out.println("User " + e.getAuthor().getName() + ": " + e.getMessage().getContentRaw());
                } catch (IndexOutOfBoundsException i) {
                    EmbedBuilder error = new EmbedBuilder();
                    error.setColor(Color.RED);
                    error.setTitle("Username Error");
                    error.setDescription("Username not found");
                    e.getChannel().sendMessage(error.build()).queue();
                    System.out.println("User " + e.getAuthor().getName() + ": " + e.getMessage().getContentRaw());
                }
            }
        }
    }
}
